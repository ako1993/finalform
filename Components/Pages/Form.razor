@page "/form"

<h1>Please fill out this form</h1>
@using System.ComponentModel.DataAnnotations

<EditForm Model="@formData" OnValidSubmit="@HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="name">Name:</label>
        <InputText id="name" class="form-control" @bind-Value="@formData.Name" />
        <ValidationMessage For="@(() => formData.Name)" />
    </div>

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" class="form-control" @bind-Value="@formData.Email" />
        <ValidationMessage For="@(() => formData.Email)" />
    </div>

    <div class="form-group">
        <label for="email">Job Title:</label>
        <InputText id="email" class="form-control" @bind-Value="@formData.JobTitle" />
        <ValidationMessage For="@(() => formData.JobTitle)" />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    private FormData formData = new FormData();

    public class FormData
    {
        [Required(ErrorMessage = "Name is required")]
        public string Name { get; set; }

        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Invalid Email Address")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Job Title is required")]
        [EmailAddress(ErrorMessage = "Invalid Job title")]
        public string JobTitle { get; set; }
    }

    private void HandleSubmit()
    {
        // Handle form submission logic here
        // This method will be called when the form is submitted and is valid
        Console.WriteLine($"Submitted: Name={formData.Name}, Email={formData.Email}, Job Title={formData.JobTitle}");
    }
}

<!--EditForm: Encloses the entire form. It handles form submission and validation.
Model="@formData": Binds the form fields to the formData object.
OnValidSubmit="@HandleSubmit": Specifies the method to call when the form is submitted and all validations pass.
DataAnnotationsValidator: Enables validation based on data annotations applied to the FormData class.
ValidationSummary: Displays a summary of validation errors, if any.
InputText: Represents an input field for text.
@bind-Value: Binds the input field to the corresponding property in the formData object.
ValidationMessage: Displays validation error messages for each field.-->



testing change