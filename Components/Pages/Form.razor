@page "/form"

<h1>Please fill out this form</h1>
@using System.ComponentModel.DataAnnotations

<EditForm Model="@user" OnValidSubmit="@HandleSubmit" FormName="userForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="name">Name:</label>
        <InputText id="name" class="form-control" @bind-Value="@user.Name" />
        <ValidationMessage For="@(() => user.Name)" />
    </div>

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" class="form-control" @bind-Value="@user.Email" />
        <ValidationMessage For="@(() => user.Email)" />
    </div>

    <button type="submit" class="btn btn-primary">Purchase Ticket</button>
    <button type="submit" class="btn btn-primary" @onclick=user.removeTickets>Request Refund</button>
</EditForm>

<p>Tickets Purchased: @user.Tickets</p>

@code {
    private User user = new User();

    private void HandleSubmit()
    {
        // Handle form submission logic here
        // This method will be called when the form is submitted and is valid
        user.addTickets();
    }

    public class User
    {
        public int Tickets = 0;
        public string Name { get; set; }
        public string Email { get; set; }

        public void addTickets()
        {
            Tickets++;
            Console.WriteLine($"You now have {Tickets}");
        }

        public void removeTickets()
        {
            Tickets--;
            Console.WriteLine($"You now have {Tickets}");
        }
    }
}

<!--EditForm: Encloses the entire form. It handles form submission and validation.
Model="@formData": Binds the form fields to the formData object.
OnValidSubmit="@HandleSubmit": Specifies the method to call when the form is submitted and all validations pass.
DataAnnotationsValidator: Enables validation based on data annotations applied to the FormData class.
ValidationSummary: Displays a summary of validation errors, if any.
InputText: Represents an input field for text.
@bind-Value: Binds the input field to the corresponding property in the formData object.
ValidationMessage: Displays validation error messages for each field.-->

